// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// smith_waterman_mark_chars
std::string smith_waterman_mark_chars(Rcpp::String text, char edit_mark);
RcppExport SEXP _text_alignment_smith_waterman_mark_chars(SEXP textSEXP, SEXP edit_markSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::String >::type text(textSEXP);
    Rcpp::traits::input_parameter< char >::type edit_mark(edit_markSEXP);
    rcpp_result_gen = Rcpp::wrap(smith_waterman_mark_chars(text, edit_mark));
    return rcpp_result_gen;
END_RCPP
}
// lowercase
std::string lowercase(std::string data);
RcppExport SEXP _text_alignment_lowercase(SEXP dataSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type data(dataSEXP);
    rcpp_result_gen = Rcpp::wrap(lowercase(data));
    return rcpp_result_gen;
END_RCPP
}
// smith_waterman_matrix
Rcpp::IntegerMatrix smith_waterman_matrix(Rcpp::CharacterVector a, Rcpp::CharacterVector b, int score_match, int score_gap, int score_mismatch, Rcpp::IntegerMatrix x);
RcppExport SEXP _text_alignment_smith_waterman_matrix(SEXP aSEXP, SEXP bSEXP, SEXP score_matchSEXP, SEXP score_gapSEXP, SEXP score_mismatchSEXP, SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type a(aSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type b(bSEXP);
    Rcpp::traits::input_parameter< int >::type score_match(score_matchSEXP);
    Rcpp::traits::input_parameter< int >::type score_gap(score_gapSEXP);
    Rcpp::traits::input_parameter< int >::type score_mismatch(score_mismatchSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerMatrix >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(smith_waterman_matrix(a, b, score_match, score_gap, score_mismatch, x));
    return rcpp_result_gen;
END_RCPP
}
// smith_waterman_function
Rcpp::NumericMatrix smith_waterman_function(Rcpp::CharacterVector a, Rcpp::CharacterVector b, double score_gap, Rcpp::Function similarity);
RcppExport SEXP _text_alignment_smith_waterman_function(SEXP aSEXP, SEXP bSEXP, SEXP score_gapSEXP, SEXP similaritySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type a(aSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type score_gap(score_gapSEXP);
    Rcpp::traits::input_parameter< Rcpp::Function >::type similarity(similaritySEXP);
    rcpp_result_gen = Rcpp::wrap(smith_waterman_function(a, b, score_gap, similarity));
    return rcpp_result_gen;
END_RCPP
}
// smith_waterman_path
Rcpp::List smith_waterman_path(Rcpp::NumericMatrix m, Rcpp::CharacterVector original_a, Rcpp::CharacterVector original_b, int row_i, int col_i, char edit_mark);
RcppExport SEXP _text_alignment_smith_waterman_path(SEXP mSEXP, SEXP original_aSEXP, SEXP original_bSEXP, SEXP row_iSEXP, SEXP col_iSEXP, SEXP edit_markSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type m(mSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type original_a(original_aSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type original_b(original_bSEXP);
    Rcpp::traits::input_parameter< int >::type row_i(row_iSEXP);
    Rcpp::traits::input_parameter< int >::type col_i(col_iSEXP);
    Rcpp::traits::input_parameter< char >::type edit_mark(edit_markSEXP);
    rcpp_result_gen = Rcpp::wrap(smith_waterman_path(m, original_a, original_b, row_i, col_i, edit_mark));
    return rcpp_result_gen;
END_RCPP
}
// smith_waterman_path_integer
Rcpp::List smith_waterman_path_integer(Rcpp::IntegerMatrix m, Rcpp::CharacterVector original_a, Rcpp::CharacterVector original_b, int row_i, int col_i, char edit_mark);
RcppExport SEXP _text_alignment_smith_waterman_path_integer(SEXP mSEXP, SEXP original_aSEXP, SEXP original_bSEXP, SEXP row_iSEXP, SEXP col_iSEXP, SEXP edit_markSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::IntegerMatrix >::type m(mSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type original_a(original_aSEXP);
    Rcpp::traits::input_parameter< Rcpp::CharacterVector >::type original_b(original_bSEXP);
    Rcpp::traits::input_parameter< int >::type row_i(row_iSEXP);
    Rcpp::traits::input_parameter< int >::type col_i(col_iSEXP);
    Rcpp::traits::input_parameter< char >::type edit_mark(edit_markSEXP);
    rcpp_result_gen = Rcpp::wrap(smith_waterman_path_integer(m, original_a, original_b, row_i, col_i, edit_mark));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_text_alignment_smith_waterman_mark_chars", (DL_FUNC) &_text_alignment_smith_waterman_mark_chars, 2},
    {"_text_alignment_lowercase", (DL_FUNC) &_text_alignment_lowercase, 1},
    {"_text_alignment_smith_waterman_matrix", (DL_FUNC) &_text_alignment_smith_waterman_matrix, 6},
    {"_text_alignment_smith_waterman_function", (DL_FUNC) &_text_alignment_smith_waterman_function, 4},
    {"_text_alignment_smith_waterman_path", (DL_FUNC) &_text_alignment_smith_waterman_path, 6},
    {"_text_alignment_smith_waterman_path_integer", (DL_FUNC) &_text_alignment_smith_waterman_path_integer, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_text_alignment(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
